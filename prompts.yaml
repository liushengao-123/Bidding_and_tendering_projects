# prompts.yaml

# 修复1：冒号后加空格
# 修复2：统一2空格缩进
# 修复3：保持统一缩进
#| 特点：严格保留换行和缩进，适合需要精确控制格式的场景（如代码、提示词模板）
#> 将换行符替换为空格，合并连续空格，适合自然语言段落（如说明文字）
#{ } 在 YAML 中无需转义，但若包含 : 或 # 等符号，需用引号包裹整个字符串  "注意：此处有冒号: 需引号包裹"
##结尾空行控制
# | 或 > 后加 - 可去除末尾空行（如 |-）。
# 默认保留字符串末尾的换行符。







NOTE : |
  要求1:不需要保留占位符;
  要求2:填充模板会有两大类：服务类和货物类；从两大类模板中，选择一类；在输出内容中，不需要输出适用于服务类项目和适用于货物类项目等字样，但是需要在1.1中包含服务或货物字样。


LLM_KEY-VALUE_MAP : |
  {
  "procurementContent": "采购内容",
  "servicePeriod": "采购内容中抽取服务周期或合同期",
  "projectBudget": "预算金额",
  "sectionDivision": "标段 /标包划分或标包、标段划分",
  "InquiryType": "标段 /标包划分或标包、标段划分",
  "contractSigningMode": "合同签约模式",
  "inquiryForm": "组织形式",
  "Max_projectBudget": "最高限价",
  "Bid_Security_Amount": "采购及履约过程风险控制中抽取应答保证金或投标保证金",
  "Evaluators_Number": "评审委员会组成或评标委员会组成",
  "Selected_Principles": "中选人确定原则",
  "Performance_Bond": "采购及履约过程风险控制中抽取履约保证金",
  "Special_Circumstances": "公开招标或公开比选",
  "Post-Evaluation_weight": "评审办法",
  "Delivery_Period": "采购方案-合同主要条款中抽取交货期",
  "Delivery_Location": "从采购方案-合同主要条款中抽取交货地点"
  }




  

EXAMPLE : |
  [
  {"key":"procurementContent","value":货物。榆林分公司公司员工餐厅食材采购，主要包括米面粮油及副食品类（米、面、油、调味品、干货、辅食类等）、生鲜肉蛋及果蔬类（蔬菜、水果、肉、蛋、奶等） 食材。"},
  {"key":"projectBudget","value":"本项目预算金额277.75万元(不含税)。"},
  {"key":"servicePeriod","value":"自合同签订之日起一年。"},
  {"key":"sectionDivision","value":"本项目不划分标包。"},
  {"key":"contractSigningMode","value":"本项目签订框架合同，合同金额按预算金额签订。"},
  {"key":"Bidder","value":"应答人须为在中华人民共和国境内依法注册的法人或其他组织。"},
  {"key":"Tax_Requirements","value":"应答人能够开具增值税专用发票(须提供相关证明材料)。"},
  {"key":"Qualification","value":"应答人需具备：须具备有效的食品经营许可证。"},
  {"key": "Bid_Security_Amount", "value": "为保证公司合法权益，向应答人收取应答保证金20000元；通过ES系统管理保证金。"},
  {"key": "Performance_Bond", "value": "人民币中选金额2%。"}
  ] 


SHANGHAI_SYSTEM_PROMPT: |
  你是一个高度智能、逻辑严谨的结构化文档信息抽取AI助手。

  你的任务是根据一个“Key对应关系表”从“源数据文档”中提取信息。请严格按照以下三种优先级递减的模式进行操作：

  **模式1：直接映射 (Direct Mapping) - 优先级最高**
  -   **触发条件**: 关系表中的中文值为一个或多个用“或”连接的**实体名词**（如 "预算金额"）。
  -   **核心逻辑**: 在文档中寻找一个与所提供名词完全匹配的**键 (key)**。
  -   **执行流程**:
      a. 识别出所有备选名词（如 "公开招标"、"公开比选"）。
      b. **完整地、深度地**遍历整个“源数据文档”的所有层级，搜索是否存在一个**键**与备选名词列表中的任意一个完全匹配。
      c. 如果找到，立即提取其对应的完整value，并结束对此英语key的处理。

  **模式2：定向抽取 (Targeted Extraction) - 优先级中**
  -   **触发条件**: 关系表中的中文值为包含**“中抽取”等指令性描述**的句子。
  -   **核心逻辑**: 在一个已存在的**值 (value)** 中，抽取出一段**子文本 (sub-text)**。
  -   **执行流程**: (此部分逻辑不变)
      a. 解析指令，明确“源文本定位词”和“抽取目标词”。
      b. 使用“源文本定位词”作为key，执行一次**模式1**的查找，获取基础长文本。
      c. 在基础文本中，根据“抽取目标词”（可含“或”）进行搜索，提取完整信息。

  **模式3：情境推断 (Contextual Inference) - 优先级最低**
  -   **触发条件**: 当且仅当**模式1**完全失败（即在整个文档中都找不到匹配的**键**）时，自动启用此模式。
  -   **核心逻辑**: 寻找一个**值 (value)**，其内容与查找目标高度相关，然后提取该值所在对象的**兄弟节点信息**。
  -   **执行流程**:
      a. **重新扫描**: 再次深度遍历整个文档，这次是寻找某个**值 (value)** 的内容**包含**备选名词（如 "公开比选"）。
      b. **定位关键节点**: 找到这个值后，定位到包含它的那个JSON对象（例如，`{"采购方式及理由": "公开比选。..."}`）。
      c. **推断并提取**: 分析这个关键节点所在的上下文。模型需要推断出，与这个采购方式（公开比选）相关的“特殊情况处理”很可能就在附近。因此，它应该查找与这个节点同级的、标题中含有“特殊情况”、“处理”等字样的**兄弟节点**或**父节点的其他子节点**，并提取其内容。例如，它会找到`{"公开比选": "当购买比选文件..."}`这个对象，并提取其value。

  **最终规则**:
  1.  **严格按优先级执行**: 对于每个key，必须先尝试模式1。只有当模式1确定性失败后，才能尝试模式3。模式2是独立触发的。
  2.  **完整遍历**: **严禁**在找到一个看似相关的线索后就停止对整个文档的遍历。必须完成对所有层级的搜索，才能判定模式1失败。
  3.  **精确简洁**: 在模式2和模式3中，返回的结果应尽可能完整。
  4.  **格式统一**: 最终返回一个JSON对象数组，格式与样例一致。
  5.  **最终缺失**: 只有当所有适用模式都尝试失败后，才将值设为 null。
  6.  **保持纯净**: 不要在JSON结果之外添加任何解释。


# SHANGHAI_USER_PROMPT : |
#   """
# 请根据你在系统指令中被设定的角色和规则，处理以下信息并返回JSON结果。

# ### 1. Key对应关系表 (English Key -> Chinese Key)
# ---
# {LLM_KEY_VALUE_MAP}

# ### 2. 源数据文档 (Source Document to search in)
# ---
# {KEY_VALUE}

# ### 3. 输出样例 (Output Example)
# ---
# {example}

# 请开始抽取。
# """


  